/* normalize */
@import url('https://necolas.github.io/normalize.css/latest/normalize.css');
/* Noto Sans */
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans&display=swap');

:root {
    --main-color: rgb(255, 255, 255);
    --main-dark-color: rgb(0, 0, 0);
    --checkbox-color: rgb(0, 128, 0);
    --header-background-color: rgb(219, 76, 63);
    --nav-background-color: rgb(240, 240, 240);
    --nav-hover-color: rgb(229, 229, 229);
}

* {
    box-sizing: border-box;
    font-family: 'Noto Sans', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

ul, h2, h3{
    padding: 0;
    margin: 0;
}

span {
    font-size: 1rem;
}

ul, li {
    list-style: none;
}

input {
    line-height: 1rem;
}

button {
    border: 0;
    padding: 0;
    background-color: transparent;
    cursor: pointer;
}

/* container block */

.container {
    display: grid;
    grid-template: auto 85vh / 1fr;
    grid-template-areas: 
    'header'
    'main';
    height: 100vh;
}

/* header block */

header {
    grid-area: header;
    display: flex;
    align-items: center;
    padding: 0px 30px;
    background-color: var(--header-background-color)
}

/* main block */

main {
    grid-area: main;
    display: grid;
    grid-template: 1fr / 1fr 3fr;
    grid-template-areas:'nav content';
}

/* nav block */

nav {
    grid-area: nav;
    padding: 10px 30px;
    background-color: var(--nav-background-color)
}

nav .wrap {
    display: flex;
    padding: 10px;
    align-items: center;
    cursor: pointer;
    flex: 1;
    column-gap: 20px;
}


/* menu block */


.menu .item{
    padding-right: 10px;
    border-radius: 10px;
    display: flex;
    align-items: center;
}

.menu > .item {
    margin-top: 20px;
}

.menu .item:not(.projects):hover {
    background-color: var(--nav-hover-color);
}

.menu .taskCount {
    flex: 0 1 25px;
    text-align: center;
}



/* icon block */

.icon {
    cursor: pointer;
    width: 25px;
    height: 25px;
    background-size: cover;
}

.icon.box {
    background-image: url('../img/box.png');
}

.icon.order {
    background-image: url('../img/order.png');
}

.icon.calendar {
    background-image: url('../img/calendar.png');
}

.icon.flag {
    background-image: url('../img/flag.png');
}
.icon.flag.critical {
    filter: invert(32%) sepia(68%) saturate(1344%) hue-rotate(333deg) brightness(94%) contrast(90%);
}
.icon.flag.high {
    filter: invert(48%) sepia(95%) saturate(1851%) hue-rotate(10deg) brightness(106%) contrast(94%);}
.icon.flag.medium {
    filter: invert(34%) sepia(93%) saturate(2503%) hue-rotate(205deg) brightness(92%) contrast(89%);
}
.icon.flag.low {
    filter: invert(65%) sepia(12%) saturate(2183%) hue-rotate(87deg) brightness(106%) contrast(82%);
}



/* content block */

.content {
    grid-area: content;
    padding: 30px 10%;
    overflow: scroll;
    position: relative;
}

.content .wrap {
    display: flex;
    padding: 10px 0;
    align-items: center;
    flex: 1;
    column-gap: 20px;
}

/* titleBar block */

.titleBar {
    display: flex;
    align-items: center;
}

.titleBar .addButton {
    font-size: 2rem;
}

.titleBar .optionButton {
    cursor: pointer;
    flex: 0 1 25px;
    margin-left: 20px;
    text-align: center;
}

.titleBar .title {
    width: 150px;
    white-space: nowrap;
    text-overflow: ellipsis;
}

/* taskForm block */

.taskForm {
    display: none;
    width: 600px;
    padding: 30px;
    margin-top: 10%;
    background-color: var(--main-color);
    border-radius: 10px;
    box-shadow: 0px 3px 10px 10px rgba(0, 0, 0, .1);
}

.taskForm label {
    font-size: 1.2rem;
    margin: 30px 0;
    display: block;
}

.taskForm textarea {
    border: 0;
    border-bottom: 1px solid var(--main-dark-color);
    min-height: 1.8rem;
    padding: 5px;
    font-size: 1rem;
    resize: none;
    overflow-y: hidden;
    width: 100%;
}

.taskForm textarea.disableOutline {
    outline: 0;
}


/* taskFormButtons block */

.taskFormButtons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    position: relative;
}

.taskFormButtons input {
    cursor: pointer;
    appearance: none;
    border: 1px solid black;
    background-color: transparent;
    border-radius: 10px;
    padding: 5px 10px;
}

.taskFormButtons input:hover {
    background-color: var(--nav-background-color)
}

.taskFormButtons input[type="time"] {
    letter-spacing: 1px;
}


.taskFormButtons input[type="time"].disableOutline:focus,
.taskFormButtons input[type="date"].disableOutline:focus{
    outline: none;
}


.taskFormButtons .dropdown {
    position: relative;
}

.taskFormButtons .dropdown button:hover {
    background-color: var(--nav-background-color)
}

.taskFormButtons .dropdown .dropDownButton {
    padding: 5px 10px;
    border: 1px solid var(--main-dark-color);
    border-radius: 10px;
}

.taskFormButtons .dropdown:last-of-type .item:nth-child(n+2) .icon {
    width: 10px;
    height: 10px;
    margin: 0 7.5px;
    border-radius: 50%;
    background-color: var(--project-color); 
    display: inline-block;
}

.taskFormButtons .dropdown:last-of-type .dropDownButton .icon[style] {
    width: 10px;
    height: 10px;
    margin: 7.5px;
    border-radius: 50%;
    background-color: var(--project-color);
    display: inline-block;
}

.taskFormButtons .message {
    position: absolute;
    top: 100%;
    left: 0;
    margin: 10px 25px;
    color: var(--main-dark-color);
}

.taskFormButtons .message::before {
    content: '!';
    width: 20px;
    height: 20px;
    background-color: var(--main-dark-color);
    border: 1px solid var(--main-dark-color);
    color: var(--main-color);
    text-align: center;
    border-radius: 100%;
    position: absolute;
    right: 100%;
    bottom: 0%;
    margin-right: 5px;
}

.taskFormButtons .message.error {
    color: var(--header-background-color);
}

.taskFormButtons .message.error::before {
    background-color: var(--header-background-color);
    border: 1px solid var(--header-background-color);
}




/* dropdownList block */

.taskFormButtons .dropdownList {
    position: absolute;
    max-height: 0;
    top: 100%;
    left: 0px;
    overflow: hidden;
    z-index: 1;
}

.taskFormButtons .projectDropdown .dropdownList {
    overflow-y: auto;
}

.taskFormButtons .dropDownButton.showList+.dropdownList {
    max-height: 1000px;
    border: 0;
    transition: max-height .1s ease-in;
}

.taskFormButtons .dropdownList ul {
    height: 100%;
    background-color: var(--main-color);
    overflow-y: scroll;
    box-shadow: 0px 0px 10px 10px rgb(0 0 0 / 10%);
    display: flex;
    flex-direction: column;
    border: .5px solid var(--main-dark-color);
}

/* tasksList block */

.tasksList {
    margin: 30px 0;
}

.tasksList .noTask {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.tasksList .item {
    border-bottom: 1px solid var(--main-dark-color);
    border-radius: 0;
    padding: 0 10px;
    margin: 20px 0;
    position: relative;
    cursor: pointer;
}

.tasksList .title {
    flex: 1;
    overflow-wrap: anywhere;
    white-space: pre-wrap;
}

.tasksList .optionButton {
    visibility: hidden;
    cursor: pointer;
    flex: 0 1 25px;
    text-align: center;
    color: rgb(160, 160, 160);
}
.tasksList .item:hover .optionButton {
    visibility: visible;
}
.tasksList .option.active .optionButton{
    display: block;
    color: rgb(0, 0, 0);
}
.tasksList .optionButton:hover {
    color: rgb(0, 0, 0);
}

.tasksList .dueDate {
    display: inline-flex;
    border: 1px solid black;
    background-color: transparent;
    border-radius: 10px;
    padding: 3px 5px;
    margin-top: 0;
    align-items: center;
    column-gap: 5px;
    margin-bottom: 10px;
    background-color: var(--nav-background-color)
}

.tasksList .dueDate .icon {
    width: .8rem;
    height: .8rem;
}


/* task checkbox block */
.tasksList .complete[type="checkbox"] {
    appearance: none;
    position: absolute;
    right: 100%;
    top: 50%;
    transform: translateY(-50%);
    margin-right: 15px;
    width: 25px;
    height: 25px;
    border: 2px solid var(--priority-color);
    border-radius: 50px;
    display: grid;
    place-content: center;
    cursor: pointer;
}


.tasksList .complete[type="checkbox"]::before {
    content: "";
    width: 20px;
    height: 20px;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    background-image: url('../img/check.png');
    background-size: cover;
}

.tasksList .complete[type="checkbox"]:checked::before {
    transform: scale(.9);
    filter: invert(21%) sepia(98%) saturate(4405%) hue-rotate(109deg) brightness(95%) contrast(102%);
}

.tasksList .complete[type="checkbox"]:checked {
    border-color: var(--checkbox-color);
}

.tasksList .complete[type="checkbox"]:hover {
    outline: 2px solid currentColor;
    outline-offset: 2px;
}




/* projects block */

.projects {
    position: relative;
}

.projects.arrowDown + .projectsList {
    max-height: 300px;
    height: 300px;
    transition: max-height .2s ease-in;
}

.projectsList.noProject {
        display: flex;
        justify-content: center;
        align-items: center;
        transition: none;
}

.projects.arrowDown + .projectsList.noProject {
    transition: none;
}

li.projects.arrowRight .icon {
    background-image: url('../img/chevron-right.svg');
    transition: transform .2s ease-in-out;
}

li.projects.arrowRight.arrowDown .icon {
    transform: rotate(90deg);
}

.projects .addButton {
    font-size: 1.5rem;
    cursor: pointer;
    flex: 0 1 25px;
    text-align: center;
    border-radius: 5px;
    padding: 0 5px;
}

.projects .addButton:hover {
    background-color: var(--nav-hover-color);
}


/* projectsList block */

.projectsList {
    max-height: 0;
    height: 0;
    overflow: hidden;
    transition: max-height .15s ease-out, height .15s ease-out;
}

.projectsList > ul {
    height: 100%;
    overflow-y: scroll;
}

.projectsList .icon{
    width: 10px;
    height: 10px;
    margin: 0 7.5px;
    border-radius: 50%;
    background-color: var(--project-color)
}

.projectsList .title {
    width: 150px;
    flex: 1;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.projectsList .optionButton {
    cursor: pointer;
    flex: 0 1 25px;
    text-align: center;
    color: rgb(160, 160, 160);
}

.projectsList .optionButton:hover {
    color: rgb(0, 0, 0);
}


/* optionList */

.optionList {
    position: fixed;
    border: 1px solid black;
    background-color: #fff;
    z-index: 1;
    font-size: 1rem;
    white-space: nowrap;
    visibility: hidden;
    display: flex;
    flex-direction: column;
    border-radius: 10px;
    overflow: hidden;
}

.option.active .optionList{
    visibility: visible;
}


.optionList button {
    width: 100%;
    padding: 10px;
}




/* overlay block */

.overlay {
    position: fixed;
    display: none;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 1;
    background-color: rgba(0, 0, 0, .2);
    justify-content: center;
    align-items: flex-start;
}

.overlay.show {
    display: flex;
}

.overlay.show form.active {
    display: block;
}

.overlay .wrap {
    display: flex;
    padding: 10px;
    align-items: center;
    cursor: pointer;
    flex: 1;
    column-gap: 10px;
}

.overlay .item {
    display: flex;
    align-items: center;
}


/* projectForm  block */

.projectForm {
    display: none;
    width: 400px;
    padding: 30px;
    margin-top: 10%;
    background-color: #fff;
    border-radius: 10px;
}

.projectForm h3 {
    padding-bottom: 10px;
}

.projectForm label{
    margin: 30px 0;
    display: flex;
    flex-direction: column;
    font-size: 1.2rem;
}

.projectForm [name="name"] {
    margin-top: 10px;
    border: 0;
    border-bottom: 1px solid var(--main-dark-color);
    min-height: 1.8rem;
    padding: 5px;
}

.projectForm [name="name"].disableOutline {
    outline: 0;
}


.projectForm {
    display: flex;
    align-items: center;
}

.projectForm .icon {
    width: 10px;
    height: 10px;
    margin: 0 7.5px;
    border-radius: 50%;
    background-color: var(--project-color);
    display: inline-block;
}

.projectForm .colorButton {
    border-radius: 5px;
    border: 1px solid var(--main-dark-color);
    width: 100%;
    transition: border-radius .2s ease-in;
}

.projectForm .colorButton.showList {
    border-radius: 5px 5px 0 0;
    transition: border-radius .05s ease-in;
}

.projectForm .colorButton.showList+.dropdownList {
    max-height: 100px;
    transition: max-height .1s ease-in;
}

.projectForm .colorButton + .dropdownList>ul {
    border-radius: 0 0 5px 5px;
    border-top: 0;
}


/* dropdown block */

.projectForm .dropdown {
    position: relative;
    flex: 1;
}

/* dropdownList block */

.projectForm .dropdownList {
    position: absolute;
    max-height: 0;
    top: 100%;
    height: 100px;
    width: 100%;
    overflow: hidden;
    transition: max-height .15s ease-out;
}
.projectForm .dropdownList > ul {
    background-color: var(--main-color);
    height: 100%;
    overflow-y: scroll;
    display: flex;
    flex-direction: column;
    border: 1px solid var(--main-dark-color);
}
.projectForm .dropdownList .item:hover {
    background-color: var(--nav-hover-color);
}

/* submitButton block */

.submitButton {
    margin-top: 30px;
    display: flex;
    column-gap: 10px;
    justify-content: flex-end;
}

.submitButton button {
    border-radius: 10px;
    padding: 5px 10px;
}

.submitButton .cancel {
    background-color: var(--nav-background-color)
}

.submitButton .cancel:hover {
    background-color: var(--main-dark-color);
    color: var(--nav-background-color);
}

.submitButton .submit {
    color: var(--main-color);
    background-color: var(--header-background-color)
}

.submitButton .submit:hover {
    color: var(--main-dark-color);
}